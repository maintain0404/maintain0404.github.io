<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Taein.dev</title>
    <link>https://maintain0404.github.io/posts/</link>
    <description>Recent content in Posts on Taein.dev</description>
    <image>
      <title>Taein.dev</title>
      <url>https://maintain0404.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://maintain0404.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Nov 2024 15:22:29 +0900</lastBuildDate>
    <atom:link href="https://maintain0404.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>grais-asgi 구현기 1 - CLI 라이브러리를 선택한 기준들</title>
      <link>https://maintain0404.github.io/posts/grais_asgi_implementation_retrospect_1.ko/</link>
      <pubDate>Sun, 24 Nov 2024 15:22:29 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/grais_asgi_implementation_retrospect_1.ko/</guid>
      <description>개요 grais-asgi를 개발하면서 커맨드라인 인터페이스 라이브러리를 선택한 기준을 정리해보았습니다.
cli 선택 기준 커맨드라인 인터페이스를 구현하는 데에서 가장 중요하게 여긴 기준은 dataclass로 옵션을 정의할 수 있어야 한다는 점입니다. dataclass로 옵션을 정의하면 코드 양을 줄일 수 있습니다. Config를 위한 클래스를 사용하는 것은 확정적이고, 이것을 그대로 커맨드라인 인터페이스로 재사용할 수 있습니다. 선언적으로 정의하므로 코드를 읽는 과정에서 로직을 배제할 수 있습니다. 실질적으로 코드를 읽는 관점에서 양을 줄이는 효과를 기대할 수 있습니다. 또한 dataclass 표준 라이브러리이므로 다른 라이브러리의 지원을 높은 확률로 기대할 수 있습니다.</description>
    </item>
    <item>
      <title>Pycon2024에서 발표한 후기</title>
      <link>https://maintain0404.github.io/posts/pycon2024-review.ko/</link>
      <pubDate>Sun, 10 Nov 2024 03:27:09 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/pycon2024-review.ko/</guid>
      <description>개요 얼마 전, 수원 컨벤션센터에서 열린 PyCon KR 2024에서 &amp;ldquo;ASGI 서버 구현기 with PyO3&amp;quot;라는 제목으로 세션 발표를 진행했습니다. 세션 준비하고 발표하는 과정에서 느낀 점을 공유합니다.
준비하기 전 저는 Python Django 웹 개발로 프로그래밍에 입문했습니다. 프로젝트를 진행할 때 웹개발이 필요하다면 거의 django를 사용했고, 커리어도 django를 사용하는 Python Backend Engineer로 시작했습니다. 그래서인지 저는 Python이 애착이 갔습니다. 첫 개발 컨퍼런스도 2019년에 열린 PyCon KR이었는데, 거기서 언젠가는 저도 발표자로 서야겠다는 생각을 했습니다. 가능하다면 첫 발표는 PyCon이면 좋겠다고 생각했었습니다.</description>
    </item>
    <item>
      <title>Supabase의 소소한 사용 팁들</title>
      <link>https://maintain0404.github.io/posts/supabase-tips.ko/</link>
      <pubDate>Sun, 13 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://maintain0404.github.io/posts/supabase-tips.ko/</guid>
      <description>Supabase 사용 팁을 정리해봤습니다.</description>
    </item>
    <item>
      <title>작은 서비스를 위한 인프라 선택하기</title>
      <link>https://maintain0404.github.io/posts/starting_small_service.ko/</link>
      <pubDate>Sun, 12 May 2024 23:22:00 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/starting_small_service.ko/</guid>
      <description>작은 서비스를 배포하면서 가장 좋다고 생각하는 구성을 정리했습니다.</description>
    </item>
    <item>
      <title>PyWeb Symposium 2024 다녀온 후기</title>
      <link>https://maintain0404.github.io/posts/pyweb_symposium_2024_review.ko/</link>
      <pubDate>Mon, 08 Apr 2024 21:09:00 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/pyweb_symposium_2024_review.ko/</guid>
      <description>Python Web Symposium 2024를 다녀오고 셰션 후기를 정리해봅니다.</description>
    </item>
    <item>
      <title>코드트리 1달간 사용해본 후기</title>
      <link>https://maintain0404.github.io/posts/codetree_review.ko/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/codetree_review.ko/</guid>
      <description>코딩 학습 서비스 코드트리를 사용해보고 느낀 점을 적어</description>
    </item>
    <item>
      <title>Rust enum 이해하기</title>
      <link>https://maintain0404.github.io/posts/enum_in_rust.ko/</link>
      <pubDate>Sun, 18 Feb 2024 22:54:00 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/enum_in_rust.ko/</guid>
      <description>Rust에서 가장 중요한 enum에 대해 정리해봤습니다.</description>
    </item>
    <item>
      <title>ASGI 서버 개발기 2 - HTTP 헤더 처리하기</title>
      <link>https://maintain0404.github.io/posts/develop_asgi_server_2.ko/</link>
      <pubDate>Sun, 04 Feb 2024 22:56:00 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/develop_asgi_server_2.ko/</guid>
      <description>ASGI HTTP/Websocket 서버를 직접 개발해보는 기록</description>
    </item>
    <item>
      <title>나의 글쓰기 분석해보기</title>
      <link>https://maintain0404.github.io/posts/analysis_my_writing.ko/</link>
      <pubDate>Wed, 31 Jan 2024 19:01:00 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/analysis_my_writing.ko/</guid>
      <description>기술 글로그를 작성하면서 겪은 글쓰기 경험을 분석해보고 개선 계획을 세워봤습니다. 글또 과제로 작성되었습니다.</description>
    </item>
    <item>
      <title>ASGI 서버 개발기 1 - 프로젝트 시작하기</title>
      <link>https://maintain0404.github.io/posts/develop_asgi_server_1.ko/</link>
      <pubDate>Sun, 21 Jan 2024 15:53:05 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/develop_asgi_server_1.ko/</guid>
      <description>ASGI HTTP/Websocket 서버를 직접 개발해보는 기록</description>
    </item>
    <item>
      <title>Reflex 사용 후 느낀 점(with 간단한 팁)</title>
      <link>https://maintain0404.github.io/posts/reflex_review.ko/</link>
      <pubDate>Sun, 07 Jan 2024 23:34:26 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/reflex_review.ko/</guid>
      <description>새로운 풀 스택 python 프레임워크를 약 8개월간 사용해보고 느낀 점과 간단한 팁을 공유합니다.</description>
    </item>
    <item>
      <title>ASGI 깊게 살펴보기</title>
      <link>https://maintain0404.github.io/posts/asgi_deep_dive.ko/</link>
      <pubDate>Sun, 24 Dec 2023 21:03:30 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/asgi_deep_dive.ko/</guid>
      <description>ASGI 도입 배경과 프로토콜을 깊게 분석해봅니다.</description>
    </item>
    <item>
      <title>소트트웨어에서 여러 작업 흐름을 관리하는 다양한 방법</title>
      <link>https://maintain0404.github.io/posts/resource_managing_in_software.ko/</link>
      <pubDate>Sun, 10 Dec 2023 23:43:57 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/resource_managing_in_software.ko/</guid>
      <description>소트트웨어에서 여러 작업 흐름을 관리하는 방법</description>
    </item>
    <item>
      <title>처음으로 프로덕트를 공개해본 후기</title>
      <link>https://maintain0404.github.io/posts/first_product_release_review.ko/</link>
      <pubDate>Thu, 16 Nov 2023 01:30:12 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/first_product_release_review.ko/</guid>
      <description>AI 퀴즈 노트앱을 공개하고 망해본 후기</description>
    </item>
    <item>
      <title>뱅크샐러드 Go 컨벤션 리뷰</title>
      <link>https://maintain0404.github.io/posts/go_convention_review_by_go_newbie.ko/</link>
      <pubDate>Wed, 20 Sep 2023 20:51:23 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/go_convention_review_by_go_newbie.ko/</guid>
      <description>뱅크샐러드 Go 컨벤션을 읽어본 후기</description>
    </item>
    <item>
      <title>아키텍처를 경계하라</title>
      <link>https://maintain0404.github.io/posts/beware_of_architecture.ko/</link>
      <pubDate>Sun, 27 Aug 2023 16:14:52 +0900</pubDate>
      <guid>https://maintain0404.github.io/posts/beware_of_architecture.ko/</guid>
      <description>소프트웨어 아키텍처를 경계하라</description>
    </item>
  </channel>
</rss>
